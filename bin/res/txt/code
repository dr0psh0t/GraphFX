public void breadthFirstTraversal()
	{
		setAllDefaultColors();
		LinkedList<Vertex> queue = new LinkedList<>();
		LinkedList<Vertex> visited = new LinkedList<>();
		
		new Thread(new Runnable()
		{	
			Vertex u;
			
			@Override
			public void run()
			{
				for(Vertex vertex : vList)
				{
					try{
						Thread.sleep(500);
					}
					catch(InterruptedException exc){
						exc.printStackTrace();
					}
					
					if(!visited.contains(vertex))
					{
						queue.add(vertex);
						visited.add(vertex);
						
						Platform.runLater(new Runnable(){
							@Override
							public void run()
							{
								vertex.getCircleInfo().setThisColor(Color.YELLOWGREEN);
								System.out.println(vertex);
							}
						});
						
						try{
							Thread.sleep(500);
						}
						catch(InterruptedException exc){
							exc.printStackTrace();
						}
						
						while (!queue.isEmpty())
						{
							u = queue.pollFirst();
							for(Edge edge : u.getAdjacencies())
							{
								Vertex node = edge.getTarget();
								if(!visited.contains(node))
								{
									queue.add(node);
									visited.add(node);
									
									Platform.runLater(new Runnable(){
										@Override
										public void run()
										{
											node.getCircleInfo().setThisColor(Color.YELLOWGREEN);
											System.out.println(node);
										}
									});
									
									try{
										Thread.sleep(500);
									}
									catch(InterruptedException exc){
										exc.printStackTrace();
									}
								}
								else
								{
									try{
										Thread.sleep(500);
									}
									catch(InterruptedException exc){
										exc.printStackTrace();
									}
									
									System.out.println(node+" is visited");
									
									Platform.runLater(new Runnable(){
										@Override
										public void run()
										{
											node.getCircleInfo().setThisColor(Color.RED);
										}
									});
									
									try{
										Thread.sleep(500);
									}
									catch(InterruptedException exc){
										exc.printStackTrace();
									}
									
									Platform.runLater(new Runnable(){
										@Override
										public void run()
										{
											node.getCircleInfo().setThisColor(Color.YELLOWGREEN);
										}
									});
								}
							}
						}
					}
					else
					{
						try{
							Thread.sleep(500);
						}
						catch(InterruptedException exc){
							exc.printStackTrace();
						}
						
						System.out.println(vertex+" is visited");
						
						Platform.runLater(new Runnable(){
							@Override
							public void run()
							{
								vertex.getCircleInfo().setThisColor(Color.RED);
							}
						});
						
						try{
							Thread.sleep(500);
						}
						catch(InterruptedException exc){
							exc.printStackTrace();
						}
						
						Platform.runLater(new Runnable(){
							@Override
							public void run()
							{
								vertex.getCircleInfo().setThisColor(Color.YELLOWGREEN);
							}
						});
					}
				}
				
				System.out.println(visited);
			}
		}).start();
	}